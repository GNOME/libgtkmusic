# Makefile.in generated by automake 1.11.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@




VPATH = @srcdir@
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@ENABLE_GLADE_CATALOG_TRUE@am__append_1 = \
@ENABLE_GLADE_CATALOG_TRUE@	$(catalog_DATA) \
@ENABLE_GLADE_CATALOG_TRUE@	$(icons)

bin_PROGRAMS = tests_notes$(EXEEXT) tests_piano$(EXEEXT) \
	tests_guitar$(EXEEXT)
subdir = .
DIST_COMMON = README $(am__configure_deps) $(dist_doc_DATA) \
	$(dist_vapi_DATA) $(gtkmusicinclude_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/config.h.in $(srcdir)/gtkmusic-0.2.pc.in \
	$(srcdir)/src/GuitarWidget.c $(srcdir)/src/MusicalNotes.c \
	$(srcdir)/src/PianoWidget.c $(srcdir)/test/TestsGuitar.c \
	$(srcdir)/test/TestsMusicalNotes.c $(srcdir)/test/TestsPiano.c \
	$(top_srcdir)/configure AUTHORS COPYING ChangeLog \
	GtkMusic-0.2.gir INSTALL NEWS build-aux/compile \
	build-aux/config.guess build-aux/config.sub build-aux/depcomp \
	build-aux/install-sh build-aux/ltmain.sh build-aux/missing \
	gtkmusic-0.2.vapi gtkmusic-internals-0.2.vapi \
	gtkmusic-internals.h gtkmusic.h libgtkmusic_0_2_la_vala.stamp \
	tests_guitar_vala.stamp tests_notes_vala.stamp \
	tests_piano_vala.stamp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = gtkmusic-0.2.pc
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(catalogdir)" "$(DESTDIR)$(docdir)" \
	"$(DESTDIR)$(vapidir)" "$(DESTDIR)$(girdir)" \
	"$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(typelibdir)" \
	"$(DESTDIR)$(gtkmusicincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libgtkmusic_0_2_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libgtkmusic_0_2_la_OBJECTS = libgtkmusic_0_2_la-GuitarWidget.lo \
	libgtkmusic_0_2_la-PianoWidget.lo \
	libgtkmusic_0_2_la-MusicalNotes.lo
libgtkmusic_0_2_la_OBJECTS = $(am_libgtkmusic_0_2_la_OBJECTS)
libgtkmusic_0_2_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libgtkmusic_0_2_la_LDFLAGS) $(LDFLAGS) -o $@
PROGRAMS = $(bin_PROGRAMS)
am_tests_guitar_OBJECTS = tests_guitar-TestsGuitar.$(OBJEXT)
tests_guitar_OBJECTS = $(am_tests_guitar_OBJECTS)
tests_guitar_LDADD = $(LDADD)
tests_guitar_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(tests_guitar_CFLAGS) \
	$(CFLAGS) $(tests_guitar_LDFLAGS) $(LDFLAGS) -o $@
am_tests_notes_OBJECTS = tests_notes-TestsMusicalNotes.$(OBJEXT)
tests_notes_OBJECTS = $(am_tests_notes_OBJECTS)
tests_notes_LDADD = $(LDADD)
tests_notes_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(tests_notes_CFLAGS) \
	$(CFLAGS) $(tests_notes_LDFLAGS) $(LDFLAGS) -o $@
am_tests_piano_OBJECTS = tests_piano-TestsPiano.$(OBJEXT)
tests_piano_OBJECTS = $(am_tests_piano_OBJECTS)
tests_piano_LDADD = $(LDADD)
tests_piano_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(tests_piano_CFLAGS) \
	$(CFLAGS) $(tests_piano_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
VALACOMPILE = $(VALAC) $(AM_VALAFLAGS) $(VALAFLAGS)
LTVALACOMPILE = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(VALAC) $(AM_VALAFLAGS) $(VALAFLAGS)
SOURCES = $(libgtkmusic_0_2_la_SOURCES) $(tests_guitar_SOURCES) \
	$(tests_notes_SOURCES) $(tests_piano_SOURCES)
DIST_SOURCES = $(libgtkmusic_0_2_la_SOURCES) $(tests_guitar_SOURCES) \
	$(tests_notes_SOURCES) $(tests_piano_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(catalog_DATA) $(dist_doc_DATA) $(dist_vapi_DATA) $(gir_DATA) \
	$(pkgconfig_DATA) $(typelib_DATA)
HEADERS = $(gtkmusicinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GLADE_CATALOG_DIR = @GLADE_CATALOG_DIR@
GLADE_ICON_DIR = @GLADE_ICON_DIR@
GLADE_MODULE_DIR = @GLADE_MODULE_DIR@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INTROSPECTION_CFLAGS = @INTROSPECTION_CFLAGS@
INTROSPECTION_COMPILER = @INTROSPECTION_COMPILER@
INTROSPECTION_GENERATE = @INTROSPECTION_GENERATE@
INTROSPECTION_GIRDIR = @INTROSPECTION_GIRDIR@
INTROSPECTION_LIBS = @INTROSPECTION_LIBS@
INTROSPECTION_MAKEFILE = @INTROSPECTION_MAKEFILE@
INTROSPECTION_SCANNER = @INTROSPECTION_SCANNER@
INTROSPECTION_TYPELIBDIR = @INTROSPECTION_TYPELIBDIR@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBGTKMUSICDEPS_CFLAGS = @LIBGTKMUSICDEPS_CFLAGS@
LIBGTKMUSICDEPS_LIBS = @LIBGTKMUSICDEPS_LIBS@
LIBGTKMUSIC_LT_VERSION = @LIBGTKMUSIC_LT_VERSION@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VALAC = @VALAC@
VALAFLAGS = @VALAFLAGS@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
CLEANFILES = gtkmusic-0.2.vapi gtkmusic-internals-0.2.vapi \
	GtkMusic-0.2.gir GtkMusic-0.2.typelib gtkmusic.h \
	gtkmusic-internals.h
EXTRA_DIST = gtkmusic-0.2.pc.in $(am__append_1)

###############################################################################
# root
###############################################################################
dist_doc_DATA = README
ACLOCAL_AMFLAGS = -I m4
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = gtkmusic-0.2.pc
DISTCHECK_CONFIGURE_FLAGS = --enable-introspection

###############################################################################
# glade
###############################################################################

#Thanks vte for the example!
@ENABLE_GLADE_CATALOG_TRUE@catalogdir = $(GLADE_CATALOG_DIR)
@ENABLE_GLADE_CATALOG_TRUE@catalog_DATA = $(srcdir)/glade/gtkmusic-catalog.xml
@ENABLE_GLADE_CATALOG_TRUE@icons = \
@ENABLE_GLADE_CATALOG_TRUE@	$(srcdir)/glade/hicolor_actions_16x16_widget-gtkmusic-guitar.png \
@ENABLE_GLADE_CATALOG_TRUE@	$(srcdir)/glade/hicolor_actions_22x22_widget-gtkmusic-guitar.png \
@ENABLE_GLADE_CATALOG_TRUE@	$(srcdir)/glade/hicolor_actions_16x16_widget-gtkmusic-piano.png \
@ENABLE_GLADE_CATALOG_TRUE@	$(srcdir)/glade/hicolor_actions_22x22_widget-gtkmusic-piano.png


#MAINTAINERCLEANFILES = $(catalog_DATA) glade catalog is not autogenerated

###############################################################################
# src
###############################################################################
lib_LTLIBRARIES = libgtkmusic-0.2.la
libgtkmusic_0_2_la_SOURCES = \
	$(srcdir)/src/GuitarWidget.vala \
	$(srcdir)/src/PianoWidget.vala \
	$(srcdir)/src/MusicalNotes.vala

libgtkmusic_0_2_la_VALAFLAGS = \
	-H gtkmusic.h --vapi gtkmusic-0.2.vapi \
	-h gtkmusic-internals.h \
	--internal-vapi gtkmusic-internals-0.2.vapi \
	--library gtkmusic-0.2 --gir GtkMusic-0.2.gir \
	--pkg gtk+-3.0 --pkg gee-0.8 \
	$(VALAFLAGS)

libgtkmusic_0_2_la_CPPFLAGS = $(LIBGTKMUSICDEPS_CFLAGS)
libgtkmusic_0_2_la_LIBADD = $(LIBGTKMUSICDEPS_LIBS)
libgtkmusic_0_2_la_LDFLAGS = \
	-version-info $(LIBGTKMUSIC_LT_VERSION) \
	-no-undefined

gtkmusicincludedir = $(includedir)/gtkmusic-0.2
gtkmusicinclude_HEADERS = gtkmusic.h
vapidir = $(datadir)/vala/vapi
dist_vapi_DATA = gtkmusic-0.2.vapi
@HAVE_INTROSPECTION_TRUE@girdir = @INTROSPECTION_GIRDIR@
@HAVE_INTROSPECTION_TRUE@gir_DATA = GtkMusic-0.2.gir
@HAVE_INTROSPECTION_TRUE@typelibdir = @INTROSPECTION_TYPELIBDIR@
@HAVE_INTROSPECTION_TRUE@typelib_DATA = GtkMusic-0.2.typelib
COMMON_CFLAGS = $(LIBGTKMUSICDEPS_CFLAGS) `pkg-config --cflags gtkmusic-0.2`
COMMON_LIBS = $(LIBGTKMUSICDEPS_LIBS) `pkg-config --libs gtkmusic-0.2`
COMMON_VALAFLAGS = --pkg gee-0.8 --pkg gtkmusic-0.2 --pkg gtk+-3.0
tests_notes_SOURCES = $(srcdir)/test/TestsMusicalNotes.vala
tests_notes_VALAFLAGS = $(COMMON_VALAFLAGS)
tests_notes_CFLAGS = $(COMMON_CFLAGS)
tests_notes_LDFLAGS = $(COMMON_LIBS)
tests_piano_SOURCES = $(srcdir)/test/TestsPiano.vala
tests_piano_VALAFLAGS = $(COMMON_VALAFLAGS)
tests_piano_CFLAGS = $(COMMON_CFLAGS)
tests_piano_LDFLAGS = $(COMMON_LIBS)
tests_guitar_SOURCES = $(srcdir)/test/TestsGuitar.vala
tests_guitar_VALAFLAGS = $(COMMON_VALAFLAGS)
tests_guitar_CFLAGS = $(COMMON_CFLAGS)
tests_guitar_LDFLAGS = $(COMMON_LIBS)
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then rm -f stamp-h1; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) stamp-h1; else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
gtkmusic-0.2.pc: $(top_builddir)/config.status $(srcdir)/gtkmusic-0.2.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libgtkmusic-0.2.la: $(libgtkmusic_0_2_la_OBJECTS) $(libgtkmusic_0_2_la_DEPENDENCIES) $(EXTRA_libgtkmusic_0_2_la_DEPENDENCIES) 
	$(libgtkmusic_0_2_la_LINK) -rpath $(libdir) $(libgtkmusic_0_2_la_OBJECTS) $(libgtkmusic_0_2_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
tests_guitar$(EXEEXT): $(tests_guitar_OBJECTS) $(tests_guitar_DEPENDENCIES) $(EXTRA_tests_guitar_DEPENDENCIES) 
	@rm -f tests_guitar$(EXEEXT)
	$(tests_guitar_LINK) $(tests_guitar_OBJECTS) $(tests_guitar_LDADD) $(LIBS)
tests_notes$(EXEEXT): $(tests_notes_OBJECTS) $(tests_notes_DEPENDENCIES) $(EXTRA_tests_notes_DEPENDENCIES) 
	@rm -f tests_notes$(EXEEXT)
	$(tests_notes_LINK) $(tests_notes_OBJECTS) $(tests_notes_LDADD) $(LIBS)
tests_piano$(EXEEXT): $(tests_piano_OBJECTS) $(tests_piano_DEPENDENCIES) $(EXTRA_tests_piano_DEPENDENCIES) 
	@rm -f tests_piano$(EXEEXT)
	$(tests_piano_LINK) $(tests_piano_OBJECTS) $(tests_piano_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgtkmusic_0_2_la-GuitarWidget.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgtkmusic_0_2_la-MusicalNotes.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgtkmusic_0_2_la-PianoWidget.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tests_guitar-TestsGuitar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tests_notes-TestsMusicalNotes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tests_piano-TestsPiano.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

libgtkmusic_0_2_la-GuitarWidget.lo: $(srcdir)/src/GuitarWidget.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtkmusic_0_2_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgtkmusic_0_2_la-GuitarWidget.lo -MD -MP -MF $(DEPDIR)/libgtkmusic_0_2_la-GuitarWidget.Tpo -c -o libgtkmusic_0_2_la-GuitarWidget.lo `test -f '$(srcdir)/src/GuitarWidget.c' || echo '$(srcdir)/'`$(srcdir)/src/GuitarWidget.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libgtkmusic_0_2_la-GuitarWidget.Tpo $(DEPDIR)/libgtkmusic_0_2_la-GuitarWidget.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(srcdir)/src/GuitarWidget.c' object='libgtkmusic_0_2_la-GuitarWidget.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtkmusic_0_2_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgtkmusic_0_2_la-GuitarWidget.lo `test -f '$(srcdir)/src/GuitarWidget.c' || echo '$(srcdir)/'`$(srcdir)/src/GuitarWidget.c

libgtkmusic_0_2_la-PianoWidget.lo: $(srcdir)/src/PianoWidget.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtkmusic_0_2_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgtkmusic_0_2_la-PianoWidget.lo -MD -MP -MF $(DEPDIR)/libgtkmusic_0_2_la-PianoWidget.Tpo -c -o libgtkmusic_0_2_la-PianoWidget.lo `test -f '$(srcdir)/src/PianoWidget.c' || echo '$(srcdir)/'`$(srcdir)/src/PianoWidget.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libgtkmusic_0_2_la-PianoWidget.Tpo $(DEPDIR)/libgtkmusic_0_2_la-PianoWidget.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(srcdir)/src/PianoWidget.c' object='libgtkmusic_0_2_la-PianoWidget.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtkmusic_0_2_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgtkmusic_0_2_la-PianoWidget.lo `test -f '$(srcdir)/src/PianoWidget.c' || echo '$(srcdir)/'`$(srcdir)/src/PianoWidget.c

libgtkmusic_0_2_la-MusicalNotes.lo: $(srcdir)/src/MusicalNotes.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtkmusic_0_2_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgtkmusic_0_2_la-MusicalNotes.lo -MD -MP -MF $(DEPDIR)/libgtkmusic_0_2_la-MusicalNotes.Tpo -c -o libgtkmusic_0_2_la-MusicalNotes.lo `test -f '$(srcdir)/src/MusicalNotes.c' || echo '$(srcdir)/'`$(srcdir)/src/MusicalNotes.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libgtkmusic_0_2_la-MusicalNotes.Tpo $(DEPDIR)/libgtkmusic_0_2_la-MusicalNotes.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(srcdir)/src/MusicalNotes.c' object='libgtkmusic_0_2_la-MusicalNotes.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgtkmusic_0_2_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgtkmusic_0_2_la-MusicalNotes.lo `test -f '$(srcdir)/src/MusicalNotes.c' || echo '$(srcdir)/'`$(srcdir)/src/MusicalNotes.c

tests_guitar-TestsGuitar.o: $(srcdir)/test/TestsGuitar.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_guitar_CFLAGS) $(CFLAGS) -MT tests_guitar-TestsGuitar.o -MD -MP -MF $(DEPDIR)/tests_guitar-TestsGuitar.Tpo -c -o tests_guitar-TestsGuitar.o `test -f '$(srcdir)/test/TestsGuitar.c' || echo '$(srcdir)/'`$(srcdir)/test/TestsGuitar.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/tests_guitar-TestsGuitar.Tpo $(DEPDIR)/tests_guitar-TestsGuitar.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(srcdir)/test/TestsGuitar.c' object='tests_guitar-TestsGuitar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_guitar_CFLAGS) $(CFLAGS) -c -o tests_guitar-TestsGuitar.o `test -f '$(srcdir)/test/TestsGuitar.c' || echo '$(srcdir)/'`$(srcdir)/test/TestsGuitar.c

tests_guitar-TestsGuitar.obj: $(srcdir)/test/TestsGuitar.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_guitar_CFLAGS) $(CFLAGS) -MT tests_guitar-TestsGuitar.obj -MD -MP -MF $(DEPDIR)/tests_guitar-TestsGuitar.Tpo -c -o tests_guitar-TestsGuitar.obj `if test -f '$(srcdir)/test/TestsGuitar.c'; then $(CYGPATH_W) '$(srcdir)/test/TestsGuitar.c'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/test/TestsGuitar.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/tests_guitar-TestsGuitar.Tpo $(DEPDIR)/tests_guitar-TestsGuitar.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(srcdir)/test/TestsGuitar.c' object='tests_guitar-TestsGuitar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_guitar_CFLAGS) $(CFLAGS) -c -o tests_guitar-TestsGuitar.obj `if test -f '$(srcdir)/test/TestsGuitar.c'; then $(CYGPATH_W) '$(srcdir)/test/TestsGuitar.c'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/test/TestsGuitar.c'; fi`

tests_notes-TestsMusicalNotes.o: $(srcdir)/test/TestsMusicalNotes.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_notes_CFLAGS) $(CFLAGS) -MT tests_notes-TestsMusicalNotes.o -MD -MP -MF $(DEPDIR)/tests_notes-TestsMusicalNotes.Tpo -c -o tests_notes-TestsMusicalNotes.o `test -f '$(srcdir)/test/TestsMusicalNotes.c' || echo '$(srcdir)/'`$(srcdir)/test/TestsMusicalNotes.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/tests_notes-TestsMusicalNotes.Tpo $(DEPDIR)/tests_notes-TestsMusicalNotes.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(srcdir)/test/TestsMusicalNotes.c' object='tests_notes-TestsMusicalNotes.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_notes_CFLAGS) $(CFLAGS) -c -o tests_notes-TestsMusicalNotes.o `test -f '$(srcdir)/test/TestsMusicalNotes.c' || echo '$(srcdir)/'`$(srcdir)/test/TestsMusicalNotes.c

tests_notes-TestsMusicalNotes.obj: $(srcdir)/test/TestsMusicalNotes.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_notes_CFLAGS) $(CFLAGS) -MT tests_notes-TestsMusicalNotes.obj -MD -MP -MF $(DEPDIR)/tests_notes-TestsMusicalNotes.Tpo -c -o tests_notes-TestsMusicalNotes.obj `if test -f '$(srcdir)/test/TestsMusicalNotes.c'; then $(CYGPATH_W) '$(srcdir)/test/TestsMusicalNotes.c'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/test/TestsMusicalNotes.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/tests_notes-TestsMusicalNotes.Tpo $(DEPDIR)/tests_notes-TestsMusicalNotes.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(srcdir)/test/TestsMusicalNotes.c' object='tests_notes-TestsMusicalNotes.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_notes_CFLAGS) $(CFLAGS) -c -o tests_notes-TestsMusicalNotes.obj `if test -f '$(srcdir)/test/TestsMusicalNotes.c'; then $(CYGPATH_W) '$(srcdir)/test/TestsMusicalNotes.c'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/test/TestsMusicalNotes.c'; fi`

tests_piano-TestsPiano.o: $(srcdir)/test/TestsPiano.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_piano_CFLAGS) $(CFLAGS) -MT tests_piano-TestsPiano.o -MD -MP -MF $(DEPDIR)/tests_piano-TestsPiano.Tpo -c -o tests_piano-TestsPiano.o `test -f '$(srcdir)/test/TestsPiano.c' || echo '$(srcdir)/'`$(srcdir)/test/TestsPiano.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/tests_piano-TestsPiano.Tpo $(DEPDIR)/tests_piano-TestsPiano.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(srcdir)/test/TestsPiano.c' object='tests_piano-TestsPiano.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_piano_CFLAGS) $(CFLAGS) -c -o tests_piano-TestsPiano.o `test -f '$(srcdir)/test/TestsPiano.c' || echo '$(srcdir)/'`$(srcdir)/test/TestsPiano.c

tests_piano-TestsPiano.obj: $(srcdir)/test/TestsPiano.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_piano_CFLAGS) $(CFLAGS) -MT tests_piano-TestsPiano.obj -MD -MP -MF $(DEPDIR)/tests_piano-TestsPiano.Tpo -c -o tests_piano-TestsPiano.obj `if test -f '$(srcdir)/test/TestsPiano.c'; then $(CYGPATH_W) '$(srcdir)/test/TestsPiano.c'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/test/TestsPiano.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/tests_piano-TestsPiano.Tpo $(DEPDIR)/tests_piano-TestsPiano.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(srcdir)/test/TestsPiano.c' object='tests_piano-TestsPiano.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_piano_CFLAGS) $(CFLAGS) -c -o tests_piano-TestsPiano.obj `if test -f '$(srcdir)/test/TestsPiano.c'; then $(CYGPATH_W) '$(srcdir)/test/TestsPiano.c'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/test/TestsPiano.c'; fi`
$(srcdir)/$(srcdir)/test/TestsMusicalNotes.c: $(srcdir)/tests_notes_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/tests_notes_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/tests_notes_vala.stamp; \
	fi
$(srcdir)/tests_notes_vala.stamp: $(srcdir)/test/TestsMusicalNotes.vala
	rm -f $@ && echo stamp > $@-t
	$(am__cd) $(srcdir) && $(VALAC) $(tests_notes_VALAFLAGS) $(VALAFLAGS) -C $(srcdir)/test/TestsMusicalNotes.vala
	mv -f $@-t $@
$(srcdir)/$(srcdir)/test/TestsGuitar.c: $(srcdir)/tests_guitar_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/tests_guitar_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/tests_guitar_vala.stamp; \
	fi
$(srcdir)/tests_guitar_vala.stamp: $(srcdir)/test/TestsGuitar.vala
	rm -f $@ && echo stamp > $@-t
	$(am__cd) $(srcdir) && $(VALAC) $(tests_guitar_VALAFLAGS) $(VALAFLAGS) -C $(srcdir)/test/TestsGuitar.vala
	mv -f $@-t $@
$(srcdir)/$(srcdir)/test/TestsPiano.c: $(srcdir)/tests_piano_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/tests_piano_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/tests_piano_vala.stamp; \
	fi
$(srcdir)/tests_piano_vala.stamp: $(srcdir)/test/TestsPiano.vala
	rm -f $@ && echo stamp > $@-t
	$(am__cd) $(srcdir) && $(VALAC) $(tests_piano_VALAFLAGS) $(VALAFLAGS) -C $(srcdir)/test/TestsPiano.vala
	mv -f $@-t $@
$(srcdir)/$(srcdir)/src/GuitarWidget.c: $(srcdir)/libgtkmusic_0_2_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libgtkmusic_0_2_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libgtkmusic_0_2_la_vala.stamp; \
	fi
$(srcdir)/$(srcdir)/src/PianoWidget.c: $(srcdir)/libgtkmusic_0_2_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libgtkmusic_0_2_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libgtkmusic_0_2_la_vala.stamp; \
	fi
$(srcdir)/$(srcdir)/src/MusicalNotes.c: $(srcdir)/libgtkmusic_0_2_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libgtkmusic_0_2_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libgtkmusic_0_2_la_vala.stamp; \
	fi
$(srcdir)/gtkmusic.h: $(srcdir)/libgtkmusic_0_2_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libgtkmusic_0_2_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libgtkmusic_0_2_la_vala.stamp; \
	fi
$(srcdir)/gtkmusic-0.2.vapi: $(srcdir)/libgtkmusic_0_2_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libgtkmusic_0_2_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libgtkmusic_0_2_la_vala.stamp; \
	fi
$(srcdir)/gtkmusic-internals.h: $(srcdir)/libgtkmusic_0_2_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libgtkmusic_0_2_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libgtkmusic_0_2_la_vala.stamp; \
	fi
$(srcdir)/gtkmusic-internals-0.2.vapi: $(srcdir)/libgtkmusic_0_2_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libgtkmusic_0_2_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libgtkmusic_0_2_la_vala.stamp; \
	fi
$(srcdir)/GtkMusic-0.2.gir: $(srcdir)/libgtkmusic_0_2_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libgtkmusic_0_2_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libgtkmusic_0_2_la_vala.stamp; \
	fi
$(srcdir)/libgtkmusic_0_2_la_vala.stamp: $(srcdir)/src/GuitarWidget.vala $(srcdir)/src/PianoWidget.vala $(srcdir)/src/MusicalNotes.vala
	rm -f $@ && echo stamp > $@-t
	$(am__cd) $(srcdir) && $(VALAC) $(libgtkmusic_0_2_la_VALAFLAGS) $(VALAFLAGS) -C $(srcdir)/src/GuitarWidget.vala $(srcdir)/src/PianoWidget.vala $(srcdir)/src/MusicalNotes.vala
	mv -f $@-t $@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool config.lt
install-catalogDATA: $(catalog_DATA)
	@$(NORMAL_INSTALL)
	@list='$(catalog_DATA)'; test -n "$(catalogdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(catalogdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(catalogdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(catalogdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(catalogdir)" || exit $$?; \
	done

uninstall-catalogDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(catalog_DATA)'; test -n "$(catalogdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(catalogdir)'; $(am__uninstall_files_from_dir)
install-dist_docDATA: $(dist_doc_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_doc_DATA)'; test -n "$(docdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(docdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(docdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(docdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(docdir)" || exit $$?; \
	done

uninstall-dist_docDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_doc_DATA)'; test -n "$(docdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(docdir)'; $(am__uninstall_files_from_dir)
install-dist_vapiDATA: $(dist_vapi_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_vapi_DATA)'; test -n "$(vapidir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(vapidir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(vapidir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(vapidir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(vapidir)" || exit $$?; \
	done

uninstall-dist_vapiDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_vapi_DATA)'; test -n "$(vapidir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(vapidir)'; $(am__uninstall_files_from_dir)
install-girDATA: $(gir_DATA)
	@$(NORMAL_INSTALL)
	@list='$(gir_DATA)'; test -n "$(girdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(girdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(girdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(girdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(girdir)" || exit $$?; \
	done

uninstall-girDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gir_DATA)'; test -n "$(girdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(girdir)'; $(am__uninstall_files_from_dir)
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)
install-typelibDATA: $(typelib_DATA)
	@$(NORMAL_INSTALL)
	@list='$(typelib_DATA)'; test -n "$(typelibdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(typelibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(typelibdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(typelibdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(typelibdir)" || exit $$?; \
	done

uninstall-typelibDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(typelib_DATA)'; test -n "$(typelibdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(typelibdir)'; $(am__uninstall_files_from_dir)
install-gtkmusicincludeHEADERS: $(gtkmusicinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(gtkmusicinclude_HEADERS)'; test -n "$(gtkmusicincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(gtkmusicincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(gtkmusicincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(gtkmusicincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(gtkmusicincludedir)" || exit $$?; \
	done

uninstall-gtkmusicincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(gtkmusicinclude_HEADERS)'; test -n "$(gtkmusicincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(gtkmusicincludedir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod u+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS) \
		config.h
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(catalogdir)" "$(DESTDIR)$(docdir)" "$(DESTDIR)$(vapidir)" "$(DESTDIR)$(girdir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(typelibdir)" "$(DESTDIR)$(gtkmusicincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f $(srcdir)/src/GuitarWidget.c
	-rm -f $(srcdir)/src/MusicalNotes.c
	-rm -f $(srcdir)/src/PianoWidget.c
	-rm -f $(srcdir)/test/TestsGuitar.c
	-rm -f $(srcdir)/test/TestsMusicalNotes.c
	-rm -f $(srcdir)/test/TestsPiano.c
	-rm -f GtkMusic-0.2.gir
	-rm -f gtkmusic-0.2.vapi
	-rm -f gtkmusic-internals-0.2.vapi
	-rm -f gtkmusic-internals.h
	-rm -f gtkmusic.h
	-rm -f libgtkmusic_0_2_la_vala.stamp
	-rm -f tests_guitar_vala.stamp
	-rm -f tests_notes_vala.stamp
	-rm -f tests_piano_vala.stamp
@ENABLE_GLADE_CATALOG_FALSE@uninstall-local:
@ENABLE_GLADE_CATALOG_FALSE@install-data-local:
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-catalogDATA install-data-local \
	install-dist_docDATA install-dist_vapiDATA install-girDATA \
	install-gtkmusicincludeHEADERS install-pkgconfigDATA \
	install-typelibDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-catalogDATA \
	uninstall-dist_docDATA uninstall-dist_vapiDATA \
	uninstall-girDATA uninstall-gtkmusicincludeHEADERS \
	uninstall-libLTLIBRARIES uninstall-local \
	uninstall-pkgconfigDATA uninstall-typelibDATA

.MAKE: all install-am install-strip

.PHONY: CTAGS GTAGS all all-am am--refresh check check-am clean \
	clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool ctags dist dist-all dist-bzip2 dist-gzip \
	dist-lzip dist-lzma dist-shar dist-tarZ dist-xz dist-zip \
	distcheck distclean distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags distcleancheck \
	distdir distuninstallcheck dvi dvi-am html html-am info \
	info-am install install-am install-binPROGRAMS \
	install-catalogDATA install-data install-data-am \
	install-data-local install-dist_docDATA install-dist_vapiDATA \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-girDATA install-gtkmusicincludeHEADERS install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-pkgconfigDATA install-ps install-ps-am install-strip \
	install-typelibDATA installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-catalogDATA \
	uninstall-dist_docDATA uninstall-dist_vapiDATA \
	uninstall-girDATA uninstall-gtkmusicincludeHEADERS \
	uninstall-libLTLIBRARIES uninstall-local \
	uninstall-pkgconfigDATA uninstall-typelibDATA


@ENABLE_GLADE_CATALOG_TRUE@install-icons:
@ENABLE_GLADE_CATALOG_TRUE@	for icon in $(icons); do \
@ENABLE_GLADE_CATALOG_TRUE@		THEME=`echo $$icon | cut -d_ -f1`; \
@ENABLE_GLADE_CATALOG_TRUE@		CONTEXT=`echo $$icon | cut -d_ -f2`; \
@ENABLE_GLADE_CATALOG_TRUE@		SIZE=`echo $$icon | cut -d_ -f3`; \
@ENABLE_GLADE_CATALOG_TRUE@		ICONFILE=`echo $$icon | cut -d_ -f4`; \
@ENABLE_GLADE_CATALOG_TRUE@		mkdir -p $(DESTDIR)$(GLADE_ICON_DIR)/$$THEME/$$SIZE/$$CONTEXT; \
@ENABLE_GLADE_CATALOG_TRUE@		$(INSTALL_DATA) $$icon $(DESTDIR)$(GLADE_ICON_DIR)/$$THEME/$$SIZE/$$CONTEXT/$$ICONFILE; \
@ENABLE_GLADE_CATALOG_TRUE@	done

@ENABLE_GLADE_CATALOG_TRUE@uninstall-icons:
@ENABLE_GLADE_CATALOG_TRUE@	-for icon in $(icons); do \
@ENABLE_GLADE_CATALOG_TRUE@		THEME=`echo $$icon | cut -d_ -f1`; \
@ENABLE_GLADE_CATALOG_TRUE@		CONTEXT=`echo $$icon | cut -d_ -f2`; \
@ENABLE_GLADE_CATALOG_TRUE@		SIZE=`echo $$icon | cut -d_ -f3`; \
@ENABLE_GLADE_CATALOG_TRUE@		ICONFILE=`echo $$icon | cut -d_ -f4`; \
@ENABLE_GLADE_CATALOG_TRUE@		rm -f $(DESTDIR)$(GLADE_ICON_DIR)/$$THEME/$$SIZE/$$CONTEXT/$$ICONFILE; \
@ENABLE_GLADE_CATALOG_TRUE@	done

@ENABLE_GLADE_CATALOG_TRUE@validate: $(catalog_DATA)
@ENABLE_GLADE_CATALOG_TRUE@	xmllint --dtdvalid $(srcdir)/glade/glade-catalog.dtd --noout $<

@ENABLE_GLADE_CATALOG_TRUE@install-data-local: install-icons
@ENABLE_GLADE_CATALOG_TRUE@uninstall-local: uninstall-icons

@HAVE_INTROSPECTION_TRUE@GtkMusic-0.2.typelib: GtkMusic-0.2.gir
@HAVE_INTROSPECTION_TRUE@	@INTROSPECTION_COMPILER@ --shared-library=libgtkmusic-0.2 -o $@ $^

GtkMusic-0.2.gir gtkmusic-internals-0.2.vapi gtkmusic-0.2.vapi: libgtkmusic-0.2.la

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
